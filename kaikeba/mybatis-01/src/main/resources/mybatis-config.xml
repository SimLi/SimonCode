<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <properties resource="jdbc-config.properties"></properties>
    <settings>
        <setting name="mapUnderscoreToCamelCase" value="true" />
    </settings>
    <typeAliases>
        <package name="com.devfuns.model" />
    </typeAliases>
    <environments default="development">
        <environment id="development">
            <!--事务管理器类型，在 MyBatis 中有两种类型的事务管理器（也就是 type=”[JDBC|MANAGED]”）
            JDBC – 这个配置就是直接使用了 JDBC 的提交和回滚设置，它依赖于从数据源得到的连接来管理事务作用域。
            MANAGED – 这个配置几乎没做什么。它从来不提交或回滚一个连接，而是让容器来管理事务的整个生命周期（比如 JEE 应用服务器的上下文）。 
            默认情况下它会关闭连接，然而一些容器并不希望这样，因此需要将 closeConnection 属性设置为 false 来阻止它默认的关闭行为-->

            <!--<transactionManager type="MANAGED">-->
                <!--<property name="closeConnection" value="false"/>-->
            <!--</transactionManager>-->

            <transactionManager type="JDBC"></transactionManager>
            <!--mybatis有三种内建的数据源类型（也就是 type=”[UNPOOLED|POOLED|JNDI]”）：-->
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
        <environment id="proc">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--<databaseIdProvider type="数据库供应商(Oracle/MySql....)">-->
        <!--<property name="Oracle" value="orcle"/>-->
        <!--<property name="MySql" value="mysql"/>-->
    <!--</databaseIdProvider>-->

    <mappers>
        <package name="com.devfuns.mapper" />
    </mappers>

</configuration>